{"version":3,"file":"static/js/127.e74c0eac.chunk.js","mappings":"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","sources":["components/FormContact/FormContact.styled.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","store/selector.js","components/FormContact/FormContact.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","page/Contacts/Contacts.jsx","page/Contacts/Contacts.styled.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const FormContainer = styled.div`\n  text-align: center;\n  margin-bottom: 15px;\n`\n\nexport const FormEl = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 25px;\n`\n\nexport const FormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 3px;\n  text-align: start;\n  font-size: 18px;\n`\nexport const FormInput = styled.input`\n  padding-left: 5px;\n  height: 36px;\n  width: 560px;\n  border: 1px solid #3cd1e9;\n  border-radius: 10px;\n  outline: none;\n  transition: border-color 250ms ease, box-shadow 250ms ease;\n\n  &::placeholder{\n    font-size: 14px;\n    padding-left: 5px;\n  }\n\n  &:hover,\n  &:focus,\n  &:active{\n    border-color: rgba(61, 195, 240, 0.895);\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n      0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  }\n`\nexport const FormButton = styled.button`\n  width: 200px;\n  height: 36px;\n  background-color: rgba(61, 195, 240, 0.895);\n  color: #0ea3de;\n  font-size: 18px;\n  font-weight: 700;\n  border: none;\n  border-radius: 10px;\n  cursor: pointer;\n  outline: none;\n  transition: border 250ms ease, box-shadow 250ms ease;\n\n  &:hover,\n  &:focus{\n    border: 1px solid#0ea3de;;\n    box-shadow: 0px 1px 7px 1px #373333;\n  }\n`","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilter = state => state.filter;\n\nexport const getFilteredContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    if (!Array.isArray(contacts)) {\n      return [];\n    }\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from '../../store/selector';\nimport {\n  FormContainer,\n  FormEl,\n  FormLabel,\n  FormInput,\n  FormButton,\n} from './FormContact.styled';\nimport { addContacts } from 'store/contacts/operations';\n\nexport const FormContact = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const dataContacts = useSelector(getContacts);\n\n  const listenerForm = event => {\n    event.preventDefault();\n    const isExist = dataContacts.some(\n      ({ name }) => name.toLowerCase() === event.target.name.value.toLowerCase()\n    );\n    if (isExist) {\n      alert(`${event.name} is already in contacts.`);\n      return;\n    }\n    dispatch(addContacts({  name, number }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <FormContainer>\n      <FormEl onSubmit={listenerForm}>\n        <FormLabel>\n          Name{' '}\n          <FormInput\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Please enter name\"\n            value={name}\n            onChange={({ target: { value } }) => setName(value)}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </FormLabel>\n        <FormLabel>\n          Number{' '}\n          <FormInput\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"Please enter number\"\n            value={number}\n            onChange={({ target: { value } }) => setNumber(value)}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </FormLabel>\n        <FormButton type=\"submit\">Add contact</FormButton>\n      </FormEl>\n    </FormContainer>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const FilterContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  text-align: center;\n  margin-bottom: 15px;\n`\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  gap: 3px;\n  text-align: start;\n  font-size: 18px;\n`\nexport const FilterInput = styled.input`\n  padding-left: 5px;\n  height: 36px;\n  width: 560px;\n  border: 1px solid #3cd1e9;\n  border-radius: 10px;\n  outline: none;\n  transition: border-color 250ms ease, box-shadow 250ms ease;\n\n  &::placeholder{\n    font-size: 14px;\n    padding-left: 5px;\n  }\n\n  &:hover,\n  &:focus,\n  &:active{\n    border-color: rgba(61, 195, 240, 0.895);\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n      0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  }\n`","import React from \"react\";\nimport { FilterContainer, FilterLabel, FilterInput } from \"./Filter.styled\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getFilter } from '../../store/selector';\nimport { filterContact } from \"store/filter/reducer\";\n\nexport const Filter = () => {\n  const dataFilter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return(\n    <FilterContainer>\n      <FilterLabel>Find contacts by name\n        <FilterInput \n          type=\"text\" \n          name=\"name\" \n          value={dataFilter} \n          onChange={event=>dispatch(filterContact(event.currentTarget.value))} \n        />\n      </FilterLabel>\n   </FilterContainer>\n  )\n}\n","import styled from \"styled-components\";\n\nexport const BtnDelete = styled.button`\n  width: 100px;\n  height: 36px;\n  background-color:  rgba(61, 195, 240, 0.895);;\n  color: #0ea3de;\n  font-size: 18px;\n  font-weight: 700;\n  border: none;\n  border-radius: 10px;\n  cursor: pointer;\n  outline: none;\n  transition: border 250ms ease, box-shadow 250ms ease;\n\n  &:hover,\n  &:focus{\n    border: 1px solid#0ea3de;;\n    box-shadow: 0px 1px 7px 1px #373333;\n  }\n`","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { BtnDelete } from \"./ContactItem.styled\";\nimport { useDispatch } from \"react-redux\";\nimport { removeContacts } from \"store/contacts/operations\";\n\nexport const ContactItem = (props) => {\n  const {id, name, number } = props;\n\n  const dispatch = useDispatch();\n\n  const deleteContact = () => {\n    dispatch(removeContacts(id));\n  };\n\n  return (\n    <>\n    {name}: {number}\n    <BtnDelete type=\"button\" onClick={deleteContact}>Delete</BtnDelete>\n    </>\n  )\n}\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};","import styled from \"styled-components\";\n\nexport const ContactsList = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  margin-left: auto;\n  margin-right: auto;\n  width: 560px;\n`\n\nexport const ListItem = styled.li`\n  font-size: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 15px;\n`;","import React from \"react\";\nimport { ContactItem } from \"components/ContactItem/ContactItem\";\nimport { ContactsList, ListItem } from \"./ContactList.styled\";\nimport { useSelector } from \"react-redux\";\nimport { getFilteredContacts } from \"../../store/selector\";\n\nexport const ContactList = ( ) => {\n  const filteredContacts = useSelector(getFilteredContacts);\n console.log(filteredContacts)\n  return (\n    <ContactsList>\n      {filteredContacts.map((contact) => (\n        <ListItem key={contact.id}>\n        <ContactItem \n        id={contact.id}\n        name={contact.name}\n        number={contact.number}\n        />\n        </ListItem>\n      ))}\n    </ContactsList>\n  )\n}\n","import { FormContact } from '../../components/FormContact/FormContact';\nimport { Filter } from '../../components/Filter/Filter';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport { Container, TitleOne, TitleTwo } from './Contacts.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'store/contacts/operations';\nimport { getError, getIsLoading } from '../../store/selector';\n\nconst Contacts = () => {\n\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <TitleOne>Phonebook</TitleOne>\n      <FormContact/>\n      {isLoading && !error && <b>Please wait...</b>}\n      <Filter/>\n      <TitleTwo>Contacts</TitleTwo>\n      <ContactList/>\n    </Container>\n  );\n};\n\nexport default Contacts;","import styled from \"styled-components\";\n\nexport  const Container = styled.div`\n  margin: auto;\n  margin-top: 32px;\n  max-width: 760px;\n`\n\nexport const TitleOne = styled.h1`\n  font-size: 48px;\n  text-align: center;\n  margin-top: 0;\n  margin-bottom: 20px;\n`\n\nexport const TitleTwo = styled.h2`\n  font-size: 36px;\n  text-align: center;\n`"],"names":["FormContainer","styled","FormEl","FormLabel","FormInput","FormButton","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","getContacts","state","contacts","items","getIsLoading","isLoading","getError","error","getFilter","filter","getFilteredContacts","contact","toLowerCase","includes","FormContact","useState","setName","number","setNumber","dispatch","useDispatch","dataContacts","useSelector","reset","onSubmit","event","preventDefault","some","target","alert","addContacts","type","placeholder","onChange","pattern","title","required","FilterContainer","FilterLabel","FilterInput","Filter","dataFilter","filterContact","currentTarget","BtnDelete","ContactItem","props","id","onClick","removeContacts","ContactsList","ListItem","ContactList","filteredContacts","console","log","useEffect","fetchContacts","Container","TitleOne","TitleTwo"],"sourceRoot":""}